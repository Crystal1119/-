/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
/*
public class Solution {
    public ListNode getIntersectionNode(ListNode headA, ListNode headB) {
//         阿这个狗题 把我脑子想破都想不出来
//         a奇怪了 写到一行就不超时？？？
        ListNode h1 = headA;
        ListNode h2 = headB;
        //1.
        // while(h1 != h2) {
        //     if(h1 == null){
        //         h1.next = headB;
        //     }else{
        //         h1 = h1.next;    
        //     }
        //     if(h2 == null){
        //         h2.next = headA;
        //     }else{
        //         h2 = h2.next;    
        //     }
        // }
        //2.
        // while(h1 != h2) {
        //     if(h1 != null) {
        //         h1 = h1.next;
        //     } else {
        //         h1 = headB;
        //     }
        //     if(h2 != null) {
        //         h2 = h2.next;
        //     } else {
        //         h2 = h2.next;
        //     }
        // }
        
        while(h1 != h2){
            if (h1 != null){h1 = h1.next;}else{h1 = headB;}
            if (h2 != null){h2 = h2.next;}else{h2 = headA;}
        }
        return h1;
    }
}

*/
public class Solution {
    public ListNode getIntersectionNode(ListNode headA, ListNode headB) {
        if(headA==null || headB == null) return null;
        ListNode a = headA;
        ListNode b = headB;
        while(a!=b){
            a = a == null ? headB : a.next;
            b = b == null ? headA : b.next;
        }
        return a;
    }
}
